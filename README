WIP   This is still very much a work in progress, a skeleton.   Features   WIP
WIP   are few, and those that do exist contain holes.                      WIP

Audiobatch is a python API for managing your music and audio file collection.

The project started because I was unsatisfied with various mainstream media
managers' ability to export my lossless library to compressed MP3's
(while maintaining tags, album art, etc.).  Soon I decided to take
my initial script and grow it into an API for managing my library.

Here's a quick example I used to clean up some genres:

  from audiobatch import trackrepo
  from audiobatch.model import track

  repo = trackrepo.open("/Volumes/fileshare/media/audio/originals")

  # Find all tracks with genre of "classical" (lower case 'c')
  tracks = repo.filter_tracks( lambda trk: trk.genre == "classical" )

  # Change the genres to "Classical" (capital 'C')
  for trk in tracks:
      trk.genre = "Classical"
      repo.update_track( trk )

Props to the Mutagen python library, which handles all the byte level
encoding details for evey audio format I could ever hope to support.

My goal, beyond what Mutagen does, is to provide a generic model for tracks
and albums that hides you from file operations and file types. It should
be possible to construct batch operations for cleaning up meta data,
converting, etc, without knowing the encoding details of a particular audio
format.

There are several other API's or apps out there with a similar goal.  I
gave them only a cursory review before deciding to just dive in.  In part, I
just wanted some python practice.

If you'd like to learn more about what Audiobatch is currently capable of,
have a look at the scripts in the source "examples" folder.




